esphome:
  name: mintymcu_panel
  platform: ESP8266
  board: d1_mini_lite

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  fast_connect: True
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password

captive_portal:

# Enable logging
logger:
  level: VERBOSE

# Enable Home Assistant API
api:
  password: !secret api_password

#mqtt:
#  broker: !secret mqtt_broker
#  username: !secret mqtt_username
#  password: !secret mqtt_password

ota:
  password: !secret ota_password

i2c:
  sda: D1
  scl: D2

switch:
  # System
  - platform: restart
    name: "MintyMCU_Control_Panel Restart"
  - platform: gpio
    pin: D3
    id: switch_panel_led
  - platform: template
    name: "MintyMCU_Control_Panel LED"
    turn_on_action:
      - switch.turn_on: switch_panel_led
      - delay: 500ms
      - switch.turn_off: switch_panel_led

font:
  - file: "OpenSans-Regular.ttf"
    id: font_opensans_10
    size: 10
  - file: "OpenSans-Regular.ttf"
    id: font_opensans_12
    size: 12
  - file: "OpenSans-Regular.ttf"
    id: font_opensans_16
    size: 16
  - file: "OpenSans-Regular.ttf"
    id: font_opensans_21
    size: 21

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x32"
    # reset_pin: D0
    address: 0x3C
    pages:
      - id: main_page
        lambda: |-
          it.strftime(0, 0, id(font_opensans_21), "%H:%M", id(homeassistant_time).now());
          it.printf(62, 5, id(font_opensans_12), "%sÂ° ", id(text_panel_display_temperature).state.c_str());
          it.printf(92, 5, id(font_opensans_12), " %s%%", id(text_panel_display_humidity).state.c_str());
          it.printf(62, 20, id(font_opensans_10), "%.1fÂ° outside", id(text_panel_display_weather).state);
      - id: button_page
        lambda: |-
          it.printf(0, 16, id(font_opensans_16),  "%s", id(text_panel_display_button).state.c_str());


sensor:
  - platform: wifi_signal
    name: "MintyMCU_Control_Panel WiFi Signal Sensor"
    update_interval: 60s
  - platform: uptime
    name: "MintyMCU_Control_Panel Uptime Sensor"
    update_interval: 60s
    filters:
      - lambda: return x / (24 * 3600);
    unit_of_measurement: "days"
  - platform: rotary_encoder
    name: "MintyMCU_Control_Panel Rotary Encoder"
    pin_a: D5
    pin_b: D6
    resolution: 1
    min_value: 0
    max_value: 100
  - platform: adc
    pin: A0
    name: "MintyMCU_Control_Panel Pin Buttons"
    update_interval: 0.5s
    unit_of_measurement: code
    id: panel_adc_sensor
    filters:
      - lambda: |-
          return ( x * (1023 / 3.3));
      - lambda: |-
          if (x > 100) {
            return x;
          } else {
            return 0.0;
          }
  - platform: homeassistant
    name: "MintyMCU_Control_Panel Display Weather from HASS"
    entity_id: sensor.weather_temperature
    id: text_panel_display_weather
    internal: true

binary_sensor:
    - platform: status
      name: "MintyMCU_Control_Panel Status"
    - platform: template
      name: "MintyMCU_Control_Panel Volume Mute Trigger Sensor"
      id: sensor_trigger_speakers_mute
    - platform: template
      name: "MintyMCU_Control_Panel Power Trigger Sensor"
      id: sensor_trigger_speakers_power
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K0"
      id: sensor_panel_button_upper_k0
      lambda: |-
        if (id(panel_adc_sensor).state >= 144.0 && id(panel_adc_sensor).state <= 148.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K1"
      id: sensor_panel_button_upper_k1
      lambda: |-
        if (id(panel_adc_sensor).state >= 149.0 && id(panel_adc_sensor).state <= 150.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K2"
      id: sensor_panel_button_upper_k2
      lambda: |-
        if (id(panel_adc_sensor).state >= 150.1 && id(panel_adc_sensor).state <= 152.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K3"
      id: sensor_panel_button_upper_k3
      lambda: |-
        if (id(panel_adc_sensor).state >= 158.0 && id(panel_adc_sensor).state <= 161.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K4"
      id: sensor_panel_button_upper_k4
      lambda: |-
        if (id(panel_adc_sensor).state >= 162.0 && id(panel_adc_sensor).state <= 163.9) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K5"
      id: sensor_panel_button_upper_k5
      lambda: |-
        if (id(panel_adc_sensor).state >= 164.0 && id(panel_adc_sensor).state <= 164.8) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K6"
      id: sensor_panel_button_upper_k6
      lambda: |-
        if (id(panel_adc_sensor).state >= 164.81 && id(panel_adc_sensor).state <= 165.9) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Upper Button K7"
      id: sensor_panel_button_upper_k7
      lambda: |-
        if (id(panel_adc_sensor).state >= 166.0 && id(panel_adc_sensor).state <= 168.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K0"
      id: sensor_panel_button_lower_k0
      lambda: |-
        if (id(panel_adc_sensor).state >= 189.0 && id(panel_adc_sensor).state <= 192.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K1"
      id: sensor_panel_button_lower_k1
      lambda: |-
        if (id(panel_adc_sensor).state >= 196.0 && id(panel_adc_sensor).state <= 199.5) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K2"
      id: sensor_panel_button_lower_k2
      lambda: |-
        if (id(panel_adc_sensor).state >= 199.6 && id(panel_adc_sensor).state <= 205.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K3"
      id: sensor_panel_button_lower_k3
      lambda: |-
        if (id(panel_adc_sensor).state >= 215.0 && id(panel_adc_sensor).state <= 220.0) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K4"
      id: sensor_panel_button_lower_k4
      lambda: |-
        if (id(panel_adc_sensor).state >= 222.1 && id(panel_adc_sensor).state <= 224.2) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K5"
      id: sensor_panel_button_lower_k5
      lambda: |-
        if (id(panel_adc_sensor).state >= 224.6 && id(panel_adc_sensor).state <= 226.5) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K6"
      id: sensor_panel_button_lower_k6
      lambda: |-
        if (id(panel_adc_sensor).state >= 227.0 && id(panel_adc_sensor).state <= 229.1) {
          return true;
        } else {
          return false;
        }
    - platform: template
      name: "MintyMCU_Control_Panel Lower Button K7"
      id: sensor_panel_button_lower_k7
      lambda: |-
        if (id(panel_adc_sensor).state >= 229.5 && id(panel_adc_sensor).state <= 234) {
          return true;
        } else {
          return false;
        }
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "MintyMCU_Control_Panel IP Address"
    ssid:
      name: "MintyMCU_Control_Panel Connected SSID"
    bssid:
      name: "MintyMCU_Control_Panel Connected BSSID"
  - platform: version
    name: "MintyMCU_Control_Panel ESPHome Version"
  - platform: homeassistant
    name: "MintyMCU_Control_Panel Display Temperature from HASS"
    entity_id: sensor.mintymcu_meteo_temperature
    id: text_panel_display_temperature
  - platform: homeassistant
    name: "MintyMCU_Control_Panel Display Humidity from HASS"
    entity_id: sensor.mintymcu_meteo_humidity
    id: text_panel_display_humidity
  - platform: homeassistant
    name: "MintyMCU_Control_Panel Display Button from HASS"
    entity_id: input_text.mintymcu_panel_button_command
    id: text_panel_display_button
    on_value:
      then:
        - if:
            condition:
              not:
                text_sensor.state:
                  id: text_panel_display_button
                  state: 'None'
            then:
              - display.page.show: button_page
              - delay: 3s
              - display.page.show: main_page

#  - platform: mqtt_subscribe
#    name: "MintyMCU_Control_Panel Display Buttons Info"
#    id: text_panel_display_hum
#    topic: mintymcu/control_panel_display_buttons

time:
  - platform: homeassistant
    id: homeassistant_time

# secret: !include secrets.yaml
